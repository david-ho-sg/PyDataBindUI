using namespace metal;


// VARYING
struct VertexOutput
{
	float4 position [[position]];
	float2 TexCoord0;
};


// UNIFORM
struct PSConstants
{
    float DarkIntensity;
    float DarkBegin;
};


fragment float4 ps_main (
	VertexOutput in [[stage_in]]
	, constant PSConstants &constants[[buffer(0)]]
	, texture2d<float> texture0 [[texture(0)]]
	, sampler sampler0 [[sampler(0)]]
	, texture2d<float> texture1 [[texture(1)]]
	, sampler sampler1 [[sampler(1)]]
	)
{
	float4 output;
	const float halfpi = 3.1415926 * 0.5;
	float4 org_clr = texture0.sample(sampler0, in.TexCoord0.xy);
	float4 mask_clr = texture1.sample(sampler1, in.TexCoord0.xy);

	output = org_clr * pow(abs(sin( clamp(mask_clr.a + constants.DarkBegin, 0.0, 1.0) * halfpi)), constants.DarkIntensity);
	return output;
}