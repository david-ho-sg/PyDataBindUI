precision mediump float;
#ifndef USE_SEPARATE_ALPHA
 #define USE_SEPARATE_ALPHA 0
#endif

uniform vec4 u_textColor;
uniform vec4 u_effectColor;
uniform sampler2D CC_Texture0;
varying lowp vec4 v_diffuse;
varying mediump vec2 v_texture0;
void main()
{
float CC_Texture0_bias = 0.0;
mediump vec4 local_0 = texture2D(CC_Texture0, v_texture0, CC_Texture0_bias);
mediump float local_1;
#if USE_SEPARATE_ALPHA
mediump float local_2 = local_0.x;
mediump float local_3 = local_0.y;
mediump float local_4 = local_0.z;
mediump float local_5 = local_0.w;
local_1 = local_2;
#else
mediump vec3 local_6 = local_0.xyz;
mediump float local_7 = local_0.w;
local_1 = local_7;
#endif
const lowp float local_8 = 0.04;
const float local_9 = 0.5;
lowp float local_10 = local_9 - local_8;
lowp float local_11 = local_9 + local_8;
lowp float local_12 = smoothstep(local_10, local_11, local_1);
const float local_13 = 1.0;
mediump float local_14 = sqrt(local_1);
lowp float local_15 = smoothstep(local_9, local_13, local_14);
lowp float local_16 = local_13 - local_12;
lowp vec4 local_17 = u_effectColor * local_16;
lowp vec4 local_18 = u_textColor * local_12;
lowp vec4 local_19 = local_17 + local_18;
lowp vec3 local_20 = local_19.xyz;
lowp float local_21 = local_19.w;
lowp float local_22 = max(local_12, local_15);
lowp float local_23 = local_22 * local_21;
lowp vec4 local_24 = vec4(local_20.x, local_20.y, local_20.z, local_23);
lowp vec4 local_25 = v_diffuse * local_24;
gl_FragColor = local_25;
}
