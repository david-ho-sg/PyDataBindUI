precision mediump float;
#ifndef USE_SEPARATE_ALPHA
 #define USE_SEPARATE_ALPHA 0
#endif

uniform vec4 u_textColor;
uniform sampler2D CC_Texture0;
uniform sampler2D CC_Texture1;
varying lowp vec4 v_diffuse;
varying mediump vec2 v_texture0;
void main()
{
float CC_Texture0_bias = 0.0;
float CC_Texture1_bias = 0.0;
lowp vec4 local_0 = texture2D(CC_Texture0, v_texture0, CC_Texture0_bias);
lowp vec4 local_1 = texture2D(CC_Texture1, v_texture0, CC_Texture1_bias);
lowp vec4 local_2;
#if USE_SEPARATE_ALPHA
lowp vec3 local_3 = local_0.xyz;
lowp float local_4 = local_0.w;
lowp float local_5 = local_1.x;
lowp float local_6 = local_1.y;
lowp float local_7 = local_1.z;
lowp float local_8 = local_1.w;
lowp vec4 local_9 = vec4(local_3.x, local_3.y, local_3.z, local_5);
local_2 = local_9;
#else
local_2 = local_0;
#endif
lowp vec3 local_10 = local_2.xyz;
lowp float local_11 = local_2.w;
const lowp float local_12 = 0.04;
const float local_13 = 0.5;
lowp float local_14 = local_13 - local_12;
lowp float local_15 = local_13 + local_12;
lowp float local_16 = smoothstep(local_14, local_15, local_11);
vec3 local_17 = u_textColor.xyz;
float local_18 = u_textColor.w;
lowp float local_19 = local_16 * local_18;
lowp vec4 local_20 = vec4(local_17.x, local_17.y, local_17.z, local_19);
lowp vec4 local_21 = v_diffuse * local_20;
gl_FragColor = local_21;
}
