#ifndef USE_SEPARATE_ALPHA
 #define USE_SEPARATE_ALPHA 0
#endif

#ifndef NEOX_METAL
 #define NEOX_METAL 0
#endif

float4 u_textColor;
float4 u_effectColor;
sampler2D CC_Texture0: register(s0);
#if USE_SEPARATE_ALPHA
sampler2D CC_Texture1: register(s1);
#endif
struct PS_INPUT
{
float4 final_position: POSITION;
float4 v_diffuse: TEXCOORD0;
float2 v_texture0: TEXCOORD1;
};
float4 main(PS_INPUT psIN) : COLOR
{
float4 final_color;
float4 local_0 = tex2D(CC_Texture0, psIN.v_texture0);
float local_1;
float local_2;
#if USE_SEPARATE_ALPHA
float local_3 = local_0.x;
float local_4 = local_0.y;
float local_5 = local_0.z;
float local_6 = local_0.w;
float4 local_7 = tex2D(CC_Texture1, psIN.v_texture0);
float local_8 = local_7.x;
float local_9 = local_7.y;
float local_10 = local_7.z;
float local_11 = local_7.w;
local_1 = local_3;
local_2 = local_8;
#else
float local_12;
float local_13;
#if NEOX_METAL
float local_14 = local_0.x;
float local_15 = local_0.y;
float local_16 = local_0.z;
float local_17 = local_0.w;
local_12 = local_14;
local_13 = local_15;
#else
float local_18 = local_0.x;
float local_19 = local_0.y;
float local_20 = local_0.z;
float local_21 = local_0.w;
local_12 = local_18;
local_13 = local_21;
#endif
local_1 = local_12;
local_2 = local_13;
#endif
float4 local_22 = mul(u_textColor, local_2);
const float local_23 = 1.0f;
float local_24 = local_23 - local_2;
float4 local_25 = mul(u_effectColor, local_24);
float4 local_26 = local_22 + local_25;
float3 local_27 = local_26.xyz;
float local_28 = local_26.w;
float local_29 = max(local_2, local_1);
float local_30 = local_29 * local_28;
float4 local_31 = {local_27.x, local_27.y, local_27.z, local_30};
float4 local_32 = psIN.v_diffuse * local_31;
final_color = local_32;
const float local_33 = 0.35f;
if (local_1 - local_33 <= 0.0) 
{ 
discard;
} 
return final_color;
}
